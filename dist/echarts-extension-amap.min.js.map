{"version":3,"file":"echarts-extension-amap.min.js","sources":["../src/helper.js","../src/AMapCoordSys.js","../src/AMapModel.js","../src/AMapView.js","../src/index.js","../index.js"],"sourcesContent":["import { version } from 'echarts/lib/echarts'\n\nexport const ecVer = version.split('.')\n\nexport const isNewEC = ecVer[0] > 4\n\n/* global AMap */\n\n// `AMap.version` only exists in AMap 2.x\n// For AMap 1.x, it's `AMap.v`\n// use function instead of constant to allow importing the plugin before AMap is loaded\nexport const isAMap2X = () => AMap.version >= 2\n\nexport function v2Equal(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1]\n}\n\nlet logMap = {}\n\nexport function logWarn(tag, msg, once) {\n  const log = `[ECharts][Extension][AMap]${tag ? ' ' + tag + ':' : ''} ${msg}`\n  once && logMap[log] || console.warn(log)\n  once && (logMap[log] = true)\n}\n\nexport function clearLogMap() {\n  logMap = {}\n}\n","import { util as zrUtil, graphic, matrix } from 'echarts/lib/echarts'\nimport { logWarn } from './helper'\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(\n    [0, 1],\n    function(dimIdx) {\n      const val = dataItem[dimIdx]\n      const halfSize = dataSize[dimIdx] / 2\n      const p1 = []\n      const p2 = []\n      p1[dimIdx] = val - halfSize\n      p2[dimIdx] = val + halfSize\n      p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx]\n      return Math.abs(\n        this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]\n      )\n    },\n    this\n  )\n}\n\n// exclude private and unsupported options\nconst excludedOptions = [\n  'echartsLayerZIndex', // DEPRECATED since v1.9.0\n  'echartsLayerInteractive',\n  'renderOnMoving',\n  'largeMode',\n  'returnMapCameraState',\n  'layers'\n]\n\nfunction AMapCoordSys(amap, api) {\n  this._amap = amap\n  this._api = api\n  this._mapOffset = [0, 0]\n  // this.dimensions = ['lng', 'lat']\n}\n\nconst AMapCoordSysProto = AMapCoordSys.prototype\n\nAMapCoordSysProto.setZoom = function(zoom) {\n  this._zoom = zoom\n}\n\nAMapCoordSysProto.setCenter = function(center) {\n  const lnglat = new AMap.LngLat(center[0], center[1])\n  this._center = this._amap.lngLatToContainer(lnglat)\n}\n\nAMapCoordSysProto.setMapOffset = function(mapOffset) {\n  this._mapOffset = mapOffset\n}\n\nAMapCoordSysProto.setAMap = function(amap) {\n  this._amap = amap\n}\n\nAMapCoordSysProto.getAMap = function() {\n  return this._amap\n}\n\nAMapCoordSysProto.dataToPoint = function(data) {\n  const lnglat = new AMap.LngLat(data[0], data[1])\n  const px = this._amap.lngLatToContainer(lnglat)\n  const mapOffset = this._mapOffset\n  return [px.x - mapOffset[0], px.y - mapOffset[1]]\n}\n\nAMapCoordSysProto.pointToData = function(pt) {\n  const mapOffset = this._mapOffset\n  const lnglat = this._amap.containerToLngLat(\n    new AMap.Pixel(\n      pt[0] + mapOffset[0],\n      pt[1] + mapOffset[1]\n    )\n  )\n  return [lnglat.lng, lnglat.lat]\n}\n\nAMapCoordSysProto.getViewRect = function() {\n  const api = this._api\n  return new graphic.BoundingRect(0, 0, api.getWidth(), api.getHeight())\n}\n\nAMapCoordSysProto.getRoamTransform = function() {\n  return matrix.create()\n}\n\nAMapCoordSysProto.prepareCustoms = function() {\n  const rect = this.getViewRect()\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'amap',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(this.dataToPoint, this),\n      size: zrUtil.bind(dataToCoordSize, this)\n    }\n  }\n}\n\nAMapCoordSysProto.convertToPixel = function(ecModel, finder, value) {\n  // here we don't use finder as only one amap component is allowed\n  return this.dataToPoint(value);\n}\n\nAMapCoordSysProto.convertFromPixel = function(ecModel, finder, value) {\n  // here we don't use finder as only one amap component is allowed\n  return this.pointToData(value);\n}\n\n// less useful\n// AMapCoordSysProto.containPoint = function(point) {\n//   return this._amap.getBounds().contains(this.pointToData(point));\n// }\n\nAMapCoordSys.create = function(ecModel, api) {\n  let amapCoordSys\n  ecModel.eachComponent('amap', function(amapModel) {\n    if (typeof AMap === 'undefined') {\n      throw new Error('AMap api is not loaded')\n    }\n    if (amapCoordSys) {\n      throw new Error('Only one amap component is allowed')\n    }\n    let amap = amapModel.getAMap()\n    const echartsLayerInteractive = amapModel.get('echartsLayerInteractive')\n    if (!amap) {\n      const root = api.getDom()\n      const painter = api.getZr().painter\n      const viewportRoot = painter.getViewportRoot()\n      viewportRoot.className = 'amap-ec-layer'\n      // PENDING not hidden?\n      viewportRoot.style.visibility = 'hidden'\n      // Not support IE8\n      let amapRoot = root.querySelector('.ec-extension-amap')\n      if (amapRoot) {\n        // Reset viewport left and top, which will be changed\n        // in moving handler in AMapView\n        viewportRoot.style.left = '0px'\n        viewportRoot.style.top = '0px'\n        root.removeChild(amapRoot)\n      }\n      amapRoot = document.createElement('div')\n      amapRoot.className = 'ec-extension-amap'\n      amapRoot.style.cssText = 'position:absolute;top:0;left:0;bottom:0;right:0;'\n      root.appendChild(amapRoot)\n\n      const options = zrUtil.clone(amapModel.get())\n      if ('echartsLayerZIndex' in options) {\n        logWarn('DEPRECATED', 'the option `echartsLayerZIndex` has been removed since v1.9.0, use `echartsLayerInteractive` instead.')\n      }\n      // delete excluded options\n      zrUtil.each(excludedOptions, function(key) {\n        delete options[key]\n      })\n\n      amap = new AMap.Map(amapRoot, options)\n\n      // PENDING: should update the model option when the user call map.setXXX?\n\n      // const nativeSetMapStyle = amap.setMapStyle\n      // const nativeSetLang = amap.setLang\n\n      // // PENDING\n      // amap.setMapStyle = function () {\n      //   nativeSetMapStyle.apply(this, arguments)\n      //   amapModel.__mapStyle = amap.getMapStyle()\n      // }\n\n      // // PENDING\n      // nativeSetLang && (amap.setLang = function() {\n      //   nativeSetLang.apply(this, arguments)\n      //   amapModel.__mapLang = amap.getLang()\n      // })\n\n      // use `complete` callback to avoid NPE when first load amap\n      amap.on('complete', function() {\n        amapRoot.querySelector('.amap-maps').appendChild(viewportRoot)\n        // PENDING\n        viewportRoot.style.visibility = ''\n      })\n\n      amapModel.setAMap(amap)\n      amapModel.setEChartsLayer(viewportRoot)\n\n      // Override\n      painter.getViewportRootOffset = function() {\n        return { offsetLeft: 0, offsetTop: 0 }\n      }\n    }\n\n    const oldEChartsLayerInteractive = amapModel.__echartsLayerInteractive\n    if (oldEChartsLayerInteractive !== echartsLayerInteractive) {\n      amapModel.setEChartsLayerInteractive(echartsLayerInteractive)\n      amapModel.__echartsLayerInteractive = echartsLayerInteractive\n    }\n\n    const center = amapModel.get('center')\n    const zoom = amapModel.get('zoom')\n    if (center && zoom) {\n      const amapCenter = amap.getCenter()\n      const amapZoom = amap.getZoom()\n      const centerOrZoomChanged = amapModel.centerOrZoomChanged(\n        [amapCenter.lng, amapCenter.lat],\n        amapZoom\n      )\n      if (centerOrZoomChanged) {\n        amap.setZoomAndCenter(zoom, new AMap.LngLat(center[0], center[1]))\n      }\n    }\n\n    // update map style(#13)\n    const originalMapStyle = amapModel.__mapStyle\n    const newMapStyle = amapModel.get('mapStyle')\n    if (originalMapStyle !== newMapStyle) {\n      amap.setMapStyle(amapModel.__mapStyle = newMapStyle)\n    }\n\n    // update map lang\n    // PENDING: AMap 2.x does not support `setLang` yet\n    if (amap.setLang) {\n      const originalMapLang = amapModel.__mapLang\n      const newMapLang = amapModel.get('lang')\n      if (originalMapLang !== newMapLang) {\n        amap.setLang(amapModel.__mapLang = newMapLang)\n      }\n    }\n    else {\n      logWarn('CAVEAT', 'The current map doesn\\'t support `setLang` API!', true)\n    }\n\n    amapCoordSys = new AMapCoordSys(amap, api)\n    amapCoordSys.setMapOffset(amapModel.__mapOffset || [0, 0])\n    amapCoordSys.setZoom(zoom)\n    amapCoordSys.setCenter(center)\n\n    amapModel.coordinateSystem = amapCoordSys\n  })\n\n  ecModel.eachSeries(function(seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'amap') {\n      // inject coordinate system\n      seriesModel.coordinateSystem = amapCoordSys\n    }\n  })\n\n  // return created coordinate systems\n  return amapCoordSys && [amapCoordSys]\n}\n\nAMapCoordSysProto.dimensions = AMapCoordSys.dimensions = ['lng', 'lat']\n\nAMapCoordSysProto.type = 'amap'\n\n\nexport default AMapCoordSys\n","import { ComponentModel } from 'echarts/lib/echarts'\nimport { isNewEC, v2Equal } from './helper'\n\nconst AMapModel = {\n  type: 'amap',\n\n  setAMap(amap) {\n    this.__amap = amap\n  },\n\n  getAMap() {\n    return this.__amap\n  },\n\n  setEChartsLayer(layer) {\n    this.__echartsLayer = layer\n  },\n\n  getEChartsLayer() {\n    return this.__echartsLayer\n  },\n\n  setEChartsLayerVisiblity(visible) {\n    this.__echartsLayer.style.display = visible ? 'block' : 'none'\n  },\n\n  // FIXME: NOT SUPPORT <= IE 10\n  setEChartsLayerInteractive(interactive) {\n    this.option.echartsLayerInteractive = !!interactive\n    this.__echartsLayer.style.pointerEvents = interactive ? 'auto' : 'none'\n  },\n\n  setCenterAndZoom(center, zoom) {\n    this.option.center = center\n    this.option.zoom = zoom\n  },\n\n  centerOrZoomChanged(center, zoom) {\n    const option = this.option\n    return !(v2Equal(center, option.center) && zoom === option.zoom)\n  },\n\n  defaultOption: {\n    center: [116.397428, 39.90923],\n    zoom: 5,\n    isHotspot: false,\n    resizeEnable: true,\n\n    // extension specific options\n    // echartsLayerZIndex: 2000, // DEPRECATED since v1.9.0\n    echartsLayerInteractive: true,\n    renderOnMoving: true,\n    largeMode: false,\n    // since v1.10.0\n    returnMapCameraState: false\n  }\n}\n\nexport default isNewEC\n  ? ComponentModel.extend(AMapModel)\n  : AMapModel\n","import { ComponentView, getInstanceByDom, throttle } from 'echarts/lib/echarts'\nimport { isNewEC, isAMap2X, clearLogMap } from './helper'\n\nlet _isAMap2X\n\nconst AMapView = {\n  type: 'amap',\n\n  init() {\n    this._isFirstRender = true\n\n    _isAMap2X = isAMap2X()\n  },\n\n  render(amapModel, ecModel, api) {\n    let rendering = true\n\n    const amap = amapModel.getAMap()\n    const viewportRoot = api.getZr().painter.getViewportRoot()\n    const offsetEl = amap.getContainer()\n    const coordSys = amapModel.coordinateSystem\n\n    const renderOnMoving = amapModel.get('renderOnMoving')\n    const resizeEnable = amapModel.get('resizeEnable')\n    const largeMode = amapModel.get('largeMode')\n    const returnMapCameraState = amapModel.get('returnMapCameraState')\n\n    const viewMode = amap.getViewMode_()\n    const is3DMode = viewMode === '3D'\n\n    let moveHandler = function(e) {\n      if (rendering) {\n        return\n      }\n\n      const offsetElStyle = offsetEl.style\n      const mapOffset = [\n        -parseInt(offsetElStyle.left, 10) || 0,\n        -parseInt(offsetElStyle.top, 10) || 0\n      ]\n      // only update style when map offset changed\n      const viewportRootStyle = viewportRoot.style\n      const offsetLeft = mapOffset[0] + 'px'\n      const offsetTop = mapOffset[1] + 'px'\n      if (viewportRootStyle.left !== offsetLeft) {\n        viewportRootStyle.left = offsetLeft\n      }\n      if (viewportRootStyle.top !== offsetTop) {\n        viewportRootStyle.top = offsetTop\n      }\n\n      coordSys.setMapOffset(amapModel.__mapOffset = mapOffset)\n\n      const actionParams = {\n        type: 'amapRoam',\n        animation: {\n          // compatible with ECharts 5.x\n          // no delay for rendering but remain animation of elements\n          duration: 0\n        }\n      }\n\n      if (returnMapCameraState) {\n        e = e || {}\n        let center = e.center\n        if (!center) {\n          // normalize center LngLat to Array\n          center = amap.getCenter()\n          center = [center.lng, center.lat]\n        }\n        actionParams.camera = {\n          viewMode,\n          center,\n          zoom: e.zoom || amap.getZoom(),\n          rotation: e.rotation == null ? amap.getRotation() : e.rotation,\n          pitch: e.pitch == null ? amap.getPitch() : e.pitch,\n          scale: amap.getScale(),\n          bounds: amap.getBounds()\n        }\n      }\n\n      api.dispatchAction(actionParams)\n    }\n\n    amap.off('mapmove', this._moveHandler)\n    amap.off('moveend', this._moveHandler)\n    amap.off('viewchange', this._moveHandler)\n    amap.off('camerachange', this._moveHandler)\n    amap.off('zoom', this._moveHandler)\n\n    if (this._resizeHandler) {\n      amap.off('resize', this._resizeHandler)\n    }\n    if (this._moveStartHandler) {\n      amap.off('movestart', this._moveStartHandler)\n    }\n    if (this._moveEndHandler) {\n      amap.off('moveend', this._moveEndHandler)\n      amap.off('zoomend', this._moveEndHandler)\n    }\n\n    amap.on(\n      renderOnMoving\n        ? (_isAMap2X\n          ? 'viewchange'\n          : is3DMode\n            ? 'camerachange'\n            : 'mapmove')\n        : 'moveend',\n      // FIXME: bad performance in 1.x in the cases with large data, use debounce?\n      // moveHandler\n      (!_isAMap2X && largeMode) ? (moveHandler = throttle(moveHandler, 20, true)) : moveHandler\n    )\n\n    this._moveHandler = moveHandler\n\n    if (renderOnMoving && !(_isAMap2X && is3DMode)) {\n      // need to listen to zoom if 1.x & 2D mode\n      // FIXME: unnecessary `mapmove` event triggered when zooming\n      amap.on('zoom', moveHandler)\n    }\n\n    if (!renderOnMoving) {\n      amap.on('movestart', this._moveStartHandler = function() {\n        setTimeout(function() {\n          amapModel.setEChartsLayerVisiblity(false)\n        }, 0)\n      })\n      const moveEndHandler = this._moveEndHandler = function(e) {\n        ;(!e || e.type !== 'moveend') && moveHandler(e)\n        setTimeout(function() {\n          amapModel.setEChartsLayerVisiblity(true)\n        }, _isAMap2X || !largeMode ? 0 : 20)\n      }\n      amap.on('moveend', moveEndHandler)\n      amap.on('zoomend', moveEndHandler)\n      if (this._isFirstRender && is3DMode) {\n        // FIXME: not rewrite AMap instance method\n        const nativeSetPicth = amap.setPitch\n        const nativeSetRotation = amap.setRotation\n        amap.setPitch = function() {\n          nativeSetPicth.apply(this, arguments)\n          moveEndHandler()\n        }\n        amap.setRotation = function() {\n          nativeSetRotation.apply(this, arguments)\n          moveEndHandler()\n        }\n      }\n    }\n\n    if (resizeEnable) {\n      let resizeHandler = function() {\n        getInstanceByDom(api.getDom()).resize()\n      }\n      if (!_isAMap2X && largeMode) {\n        resizeHandler = throttle(resizeHandler, 20, true)\n      }\n      amap.on('resize', this._resizeHandler = resizeHandler)\n    }\n\n    this._isFirstRender = rendering = false\n  },\n\n  dispose() {\n    clearLogMap()\n    const component = this.__model\n    if (component) {\n      component.getAMap().destroy()\n      component.setAMap(null)\n      component.setEChartsLayer(null)\n      if (component.coordinateSystem) {\n        component.coordinateSystem.setAMap(null)\n        component.coordinateSystem = null\n      }\n      delete this._moveHandler\n      delete this._resizeHandler\n      delete this._moveStartHandler\n      delete this._moveEndHandler\n    }\n  }\n}\n\nexport default isNewEC\n  ? ComponentView.extend(AMapView)\n  : AMapView\n","/**\n * AMap component extension\n */\n\nimport AMapCoordSys from './AMapCoordSys'\nimport AMapModel from './AMapModel'\nimport AMapView from './AMapView'\nimport { isNewEC, ecVer } from './helper'\n\nexport { version, name } from '../package.json'\n\n/**\n * @typedef {import('../export').EChartsExtensionRegisters} EChartsExtensionRegisters\n */\n\n/**\n * AMap extension installer\n * @param {EChartsExtensionRegisters} registers\n */\nexport function install(registers) {\n  // add coordinate system support for pie series for ECharts < 5.4.0\n  if (!isNewEC || (ecVer[0] == 5 && ecVer[1] < 4)) {\n    registers.registerLayout(function(ecModel, api) {\n      ecModel.eachSeriesByType('pie', function (seriesModel) {\n        const coordSys = seriesModel.coordinateSystem\n        const data = seriesModel.getData()\n        const valueDim = data.mapDimension('value')\n        if (coordSys && coordSys.type === 'amap') {\n          const center = seriesModel.get('center')\n          const point = coordSys.dataToPoint(center)\n          const cx = point[0]\n          const cy = point[1]\n          data.each(valueDim, function (value, idx) {\n            const layout = data.getItemLayout(idx)\n            layout.cx = cx\n            layout.cy = cy\n          })\n        }\n      })\n    })\n  }\n  // Model\n  isNewEC\n    ? registers.registerComponentModel(AMapModel)\n    : registers.extendComponentModel(AMapModel)\n  // View\n  isNewEC\n    ? registers.registerComponentView(AMapView)\n    : registers.extendComponentView(AMapView)\n  // Coordinate System\n  registers.registerCoordinateSystem('amap', AMapCoordSys)\n  // Action\n  registers.registerAction(\n    {\n      type: 'amapRoam',\n      event: 'amapRoam',\n      update: 'updateLayout'\n    },\n    function(payload, ecModel) {\n      ecModel.eachComponent('amap', function(amapModel) {\n        const amap = amapModel.getAMap()\n        const center = amap.getCenter()\n        amapModel.setCenterAndZoom([center.lng, center.lat], amap.getZoom())\n      })\n    }\n  )\n}\n","/**\n * TODO use `echarts/core` rather than `echarts/lib/echarts`\n * to avoid self-registered `CanvasRenderer` and `DataSetComponent` in Apache ECharts 5\n * but it's not compatible with echarts v4. Leave it to 2.0.\n */\nimport * as echarts from 'echarts/lib/echarts'\nimport { install } from './src/index'\nimport { isNewEC } from './src/helper'\n\nisNewEC ? echarts.use(install) : install(echarts)\n\nexport { name, version } from './src/index'\n"],"names":["ecVer","version","split","isNewEC","logMap","logWarn","tag","msg","once","log","concat","console","warn","dataToCoordSize","dataSize","dataItem","zrUtil","map","dimIdx","val","halfSize","p1","p2","Math","abs","this","dataToPoint","excludedOptions","AMapCoordSys","amap","api","_amap","_api","_mapOffset","AMapCoordSysProto","prototype","setZoom","zoom","_zoom","setCenter","center","lnglat","AMap","LngLat","_center","lngLatToContainer","setMapOffset","mapOffset","setAMap","getAMap","data","px","x","y","pointToData","pt","containerToLngLat","Pixel","lng","lat","getViewRect","graphic","BoundingRect","getWidth","getHeight","getRoamTransform","matrix","create","prepareCustoms","rect","coordSys","type","width","height","coord","bind","size","util","convertToPixel","ecModel","finder","value","convertFromPixel","amapCoordSys","eachComponent","amapModel","Error","echartsLayerInteractive","get","root","getDom","painter","getZr","viewportRoot","getViewportRoot","className","style","visibility","amapRoot","querySelector","left","top","removeChild","document","createElement","cssText","appendChild","options","clone","each","key","Map","on","setEChartsLayer","getViewportRootOffset","offsetLeft","offsetTop","__echartsLayerInteractive","setEChartsLayerInteractive","amapCenter","getCenter","amapZoom","getZoom","centerOrZoomChanged","setZoomAndCenter","originalMapStyle","__mapStyle","newMapStyle","setMapStyle","setLang","originalMapLang","__mapLang","newMapLang","__mapOffset","coordinateSystem","eachSeries","seriesModel","dimensions","_isAMap2X","AMapModel","__amap","layer","__echartsLayer","getEChartsLayer","setEChartsLayerVisiblity","visible","display","interactive","option","pointerEvents","setCenterAndZoom","a","b","defaultOption","isHotspot","resizeEnable","renderOnMoving","largeMode","returnMapCameraState","ComponentModel","extend","AMapView","init","_isFirstRender","render","rendering","offsetEl","getContainer","viewMode","getViewMode_","is3DMode","moveHandler","e","offsetElStyle","parseInt","viewportRootStyle","actionParams","animation","duration","camera","rotation","getRotation","pitch","getPitch","scale","getScale","bounds","getBounds","dispatchAction","off","_moveHandler","_resizeHandler","_moveStartHandler","_moveEndHandler","throttle","setTimeout","moveEndHandler","nativeSetPicth","setPitch","nativeSetRotation","setRotation","apply","arguments","resizeHandler","getInstanceByDom","resize","dispose","component","__model","destroy","ComponentView","install","registers","registerLayout","eachSeriesByType","getData","valueDim","mapDimension","point","cx","cy","idx","layout","getItemLayout","registerComponentModel","extendComponentModel","registerComponentView","extendComponentView","registerCoordinateSystem","registerAction","event","update","payload","echarts","use"],"mappings":"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"}